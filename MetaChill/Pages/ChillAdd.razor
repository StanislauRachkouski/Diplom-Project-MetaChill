@page "/chilladd"
@using Newtonsoft.Json
@inject HttpClient Http
@inject NavigationManager NavManager

<div class="workblock">

	<div class="row">
		<div class="col-3">

		</div>

		<div class="col-9 h11">
			<h1> Добавить место отдыха </h1>

		</div>
	</div>

	<div class="row">
		<div class="col-3"></div>

		<div class="col-9">
			<form>
				<div class="form-group row">
					<label for="id" class="col-sm-3 col-form-label">ID</label>
					<div class="col-sm-9">
						<input @bind="adv.id" type="text" readonly class="form-control-plaintext" id="id">
					</div>
				</div>
				<div class="form-group row">
					<label for="Name" class="col-sm-3 col-form-label">Название</label>
					<div class="col-sm-9">
						<input @bind="adv.Name" type="text" class="form-control" id="Name" required>
					</div>
				</div>
				<div class="form-group row">
					<label for="phone" class="col-sm-3 col-form-label">Телефон</label>
					<div class="col-sm-9">
						<input @bind="adv.phoneNumber" type="text" class="form-control" id="phone" required>
					</div>
				</div>

				<div class="form-group row">
					<label for="price-usd" class="col-sm-3 col-form-label">Цена в USD</label>
					<div class="col-sm-9">
						<input @bind="adv.priceUSD" type="text" class="form-control" id="price-usd" required />
					</div>
				</div>

				<div class="form-group row">
					<label for="rate" class="col-sm-3 col-form-label">Курс</label>
					<div class="col-sm-9">
						<input @bind="course.Course" type="text" readonly class="form-control-plaintext" id="rate">
					</div>
				</div>

				<div class="form-group row">
					<label for="price-byn" class="col-sm-3 col-form-label">Цена в BYN</label>
					<div class="col-sm-9">
						<input type="text" readonly class="form-control-plaintext" id="price-byn" value="@getPriceBYN()">
					</div>
				</div>

				<button @onclick="submitForm" class="btn btn-primary" type="submit">Отправить</button>


			</form>

		</div>
	</div>
</div>

@code {

    CurrencyCourse course;
    ChillLists adv;


    protected override async Task OnInitializedAsync()
    {

        course = new CurrencyCourse();

        var response = await Http.GetStringAsync("http://127.0.0.1:3000/getcourse");
        course = JsonConvert.DeserializeObject<CurrencyCourse>(response);
        adv.courseOfUSD = course.Course;


    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        adv = new ChillLists ();

    }

    private float getPriceBYN()
    {
        adv.priceBYN = adv.priceUSD * course.Course;
        return adv.priceBYN;


    }

    protected async Task submitForm()
    {

        await Http.PostAsJsonAsync<ChillLists>("http://localhost:10000/api/MetaChill/addChillPlace", adv);
        NavManager.NavigateTo("/advlist");

    }


	}
